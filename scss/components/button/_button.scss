#{$button} {
  display: inline-block;
  padding: $button-spacing-y $button-spacing-x;
  box-shadow: $button-box-shadow;
  vertical-align: middle;
  text-align: center;
  text-decoration: none;
  text-transform: $button-text-transform;
  font-weight: $button-font-weight;
  font-family: $button-font-family;
  line-height: $button-line-height;
  cursor: pointer;

  -webkit-appearance: none;
  @include hover {
    box-shadow: $button-box-shadow-hover;
  }
  @include button-font-size($button-font-size);
  @include border-radius($button-border-radius);
  @include border(
    $button-border-width,
    $button-border-style,
    $button-variant-border
  );
  @include button-variant(
    $button-variant-color,
    $button-variant-background,
    $button-variant-border,
    $button-variant-hover,
    $button-variant-active
  );
  @include transition($button-transition);
  user-select: none;
  &::-moz-focus-inner {
    padding: 0;
    border: 0;
  }
  @each $font-size, $value in $font-sizes {
    &.#{$font-size} {
      @include button-font-size($value);
    }
  }
  &.full-x {
    display: block;
    width: 100%;
  }
  &.no-border-radius {
    @include border-radius($no-border-radius);
  }
  &.disabled,
  &:disabled {
    opacity: $button-variant-disabled-opacity;
    cursor: not-allowed;
    pointer-events: none;
  }
  @each $variant, $value in $variants {
    &.#{$variant} {
      @include button-variant(
        nth($value, 3),
        nth($value, 1),
        nth($value, 2),
        nth($value, 4),
        nth($value, 5)
      );
    }
  }
  &.outline {
    @include button-outline-variant(
      $button-variant-background,
      $button-variant-border
    );
    @each $variant, $value in $variants {
      &.#{$variant} {
        @include button-outline-variant(nth($value, 1), nth($value, 2));
      }
    }
  }
  &.inverted {
    @include button-inverted-variant(
      $button-variant-color,
      $button-variant-background,
      $button-variant-border
    );
    @each $variant, $value in $variants {
      &.#{$variant} {
        @include button-inverted-variant(
          nth($value, 3),
          nth($value, 1),
          nth($value, 2)
        );
      }
    }
  }
  &.loading {
    position: relative;
    color: transparent !important;
    cursor: default;
    pointer-events: none;

    @include button-loading-variant(
      $button-variant-color,
      $button-variant-active
    );
    &:after {
      position: absolute;
      top: 50%;
      left: 50%;
      margin: $button-loader-spacing;
      width: $button-loader-size;
      height: $button-loader-size;
      border-width: $button-loader-border;
      border-style: solid;
      content: '';
      animation: button-spin $transition-duration * 3 linear;
      animation-iteration-count: infinite;

      @include border-radius($button-loader-circle);
    }
    @each $variant, $value in $variants {
      &.#{$variant} {
        @include button-loading-variant(nth($value, 3), nth($value, 5));
      }
    }
  }
  &.icon {
    display: inline-flex;
    align-items: center;
    justify-content: space-between;
    span {
      display: inline-flex;
      margin: 0;
      width: auto;
      height: auto;
    }
  }
}

.link {
  border: 0;

  @include border-radius($no-border-radius);
  @include link-variant($button-variant-background, $button-variant-hover);
  @each $variant, $value in $variants {
    &.#{$variant} {
      @include link-variant(nth($value, 1), nth($value, 4));
    }
  }
}

.close {
  position: relative;
  display: inline-block;
  outline: none;
  border: 0;
  vertical-align: top;
  font-size: $font-size;
  cursor: pointer;

  @include border-radius($border-radius-circle);
  @include close-font-size($button-close-size, $button-close-size);
  @include close-variant($button-variant-background, $button-variant-color);
  @each $variant, $value in $variants {
    &.#{$variant} {
      @include close-variant(nth($value, 1), nth($value, 3));
    }
  }
  &.negative {
    @include close-variant(
      $negative-variant-background,
      $negative-variant-color
    );
  }
  &:before,
  &:after {
    position: absolute;
    top: 50%;
    left: 50%;
    display: block;
    content: '';
    transform: $button-close-transform;
    transform-origin: center center;
  }
  &:before {
    width: 50%;
    height: $button-close-icon-size;
  }
  &:after {
    width: $button-close-icon-size;
    height: 50%;
  }
  &.xs {
    @include close-font-size($button-close-size-xs, $button-close-size-xs);
  }
  &.sm {
    @include close-font-size($button-close-size-sm, $button-close-size-sm);
  }
  &.lg {
    @include close-font-size($button-close-size-lg, $button-close-size-lg);
  }
  &.xl {
    @include close-font-size($button-close-size-xl, $button-close-size-xl);
  }
}

@keyframes button-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
